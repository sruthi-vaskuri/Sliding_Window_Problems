class Solution
{
    ArrayList<Integer> countDistinct(int A[], int n, int k)
    {
        // code here 
        ArrayList<Integer> arr=new ArrayList<>();
        HashMap<Integer,Integer> map=new HashMap<>();
        int count=0;
        for(int i=0;i<k;i++)
        {
            if(map.containsKey(A[i]))
                map.put(A[i],map.get(A[i])+1);
            else
            {
            map.put(A[i],1);
            count+=1;
            }
        }
        arr.add(count);
        int j=k;
        while(j<n){
            if(map.get(A[j-k])==1){
                map.remove(A[j-k]);
                count--;
            }else{
                map.put(A[j-k],map.get(A[j-k])-1);
            }
            if(map.containsKey(A[j]))
                map.put(A[j],map.get(A[j])+1);
            else
            {
            map.put(A[j],1);
            count+=1;
            }
            j++;
            arr.add(count);
        }
        return arr;
    }
}



LINK : https://practice.geeksforgeeks.org/problems/count-distinct-elements-in-every-window/1/?category[]=sliding-window&category[]=sliding-window&company[]=Amazon&company[]=Microsoft&company[]=Google&company[]=Adobe&company[]=Amazon&company[]=Microsoft&company[]=Google&company[]=Adobe&page=1&query=category[]sliding-windowcompany[]Amazoncompany[]Microsoftcompany[]Googlecompany[]Adobepage1company[]Amazoncompany[]Microsoftcompany[]Googlecompany[]Adobecategory[]sliding-window
